{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoList","todos","todoModalId","handleShowModalClick","className","map","todo","cn","id","completed","title","type","onClick","TodoFilter","setSelectedFilter","setQuery","query","onChange","event","target","value","placeholder","length","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoModal","handleHideModalClick","useState","user","setUser","isLoading","setIsLoading","selectedTodo","filter","useEffect","userId","u","catch","error","Error","finally","href","name","App","setTodos","selectedFilter","showModal","setShowModal","setTodoModalId","todosList","todoFilter","toLowerCase","includes","trim","todoId","ReactDOM","render","document","getElementById"],"mappings":"oPAUaA,EAA4B,SAAC,GAInC,IAHLC,EAGI,EAHJA,MACAC,EAEI,EAFJA,YACAC,EACI,EADJA,qBAEA,OACE,wBAAOC,UAAU,+BAAjB,UACE,gCACE,+BACE,mCACA,6BACE,sBAAMA,UAAU,OAAhB,SACE,mBAAGA,UAAU,qBAGjB,uCACA,wCAIJ,gCACGH,EAAMI,KAAI,SAACC,GAAD,OACT,qBACE,UAAQ,OAERF,UAAWG,IAAG,CACZ,4BAA6BL,IAAgBI,EAAKE,KAJtD,UAOE,oBAAIJ,UAAU,eAAd,SAA8BE,EAAKE,KAClCF,EAAKG,UACJ,oBAAIL,UAAU,eAAd,SACE,sBAAMA,UAAU,OAAO,UAAQ,gBAA/B,SACE,mBAAGA,UAAU,qBAIjB,oBAAIA,UAAU,iBAEhB,oBAAIA,UAAU,2BAAd,SACE,mBAAGA,UAAWG,IAAG,CACf,mBAAoBD,EAAKG,UACzB,mBAAoBH,EAAKG,YAF3B,SAKGH,EAAKI,UAGV,oBAAIN,UAAU,8BAAd,SACE,wBACE,UAAQ,eACRA,UAAU,SACVO,KAAK,SACLC,QAAS,kBAAMT,EAAqBG,EAAKE,KAJ3C,SAME,sBAAMJ,UAAU,OAAhB,SACE,mBAAGA,UAAWG,IAAG,MAAO,CACtB,SAAUD,EAAKE,KAAON,EACtB,eAAgBI,EAAKE,KAAON,cAlC/BI,EAAKE,aC1BTK,EAA8B,SAAC,GAAD,IACzCC,EADyC,EACzCA,kBACAC,EAFyC,EAEzCA,SACAC,EAHyC,EAGzCA,MAHyC,OAKzC,uBAAMZ,UAAU,mBAAhB,UACE,mBAAGA,UAAU,UAAb,SACE,sBAAMA,UAAU,SAAhB,SACE,yBACE,UAAQ,eACRa,SAAU,SAACC,GAAD,OAAWJ,EAAkBI,EAAMC,OAAOC,QAFtD,UAIE,wBAAQA,MAAM,MAAd,iBACA,wBAAQA,MAAM,SAAd,oBACA,wBAAQA,MAAM,YAAd,8BAKN,oBAAGhB,UAAU,qDAAb,UACE,uBACE,UAAQ,cACRO,KAAK,OACLP,UAAU,QACViB,YAAY,YACZD,MAAOJ,EACPC,SAAU,SAACC,GAAD,OAAWH,EAASG,EAAMC,OAAOC,UAE7C,sBAAMhB,UAAU,eAAhB,SACE,mBAAGA,UAAU,8BAGG,IAAjBY,EAAMM,QACL,sBAAMlB,UAAU,gBAAgBmB,MAAO,CAAEC,cAAe,OAAxD,SAEE,wBACE,UAAQ,oBACRb,KAAK,SACLP,UAAU,SACVQ,QAAS,kBAAMG,EAAS,gBC5CvBU,G,MAAmB,kBAC9B,qBAAKrB,UAAU,SAAS,UAAQ,SAAhC,SACE,qBAAKA,UAAU,wBCSnB,SAASsB,EAAOC,GAEd,IARYC,EAQNC,EAZS,iEAYYF,EAAM,QAGjC,OAXYC,EAWA,IAVL,IAAIE,SAAQ,SAAAC,GACjBC,WAAWD,EAASH,OAUnBK,MAAK,kBAAMC,MAAML,MACjBI,MAAK,SAAAE,GAAG,OAAIA,EAAIC,UAGd,ICZMC,EAA6B,SAAC,GAIpC,IAHLpC,EAGI,EAHJA,MACAC,EAEI,EAFJA,YACAoC,EACI,EADJA,qBAEA,EAAwBC,mBAAsB,MAA9C,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAAkCF,oBAAS,GAA3C,mBAAOG,EAAP,KAAkBC,EAAlB,KAEMC,EAAe3C,EAAM4C,QAAO,SAAAvC,GAAI,OAAIA,EAAKE,KAAON,KAAa,GAYnE,OAVA4C,qBAAU,WDIW,IAACC,ECHpBJ,GAAa,IDGOI,ECFZH,EAAaG,ODEkBrB,EAAG,iBAAiBqB,KCDxDd,MAAK,SAAAe,GAAC,OAAIP,EAAQO,MAClBC,OAAM,SAACC,GACN,MAAM,IAAIC,MAAMD,MAEjBE,SAAQ,kBAAMT,GAAa,QAC7B,CAACC,IAGF,sBAAKxC,UAAU,kBAAkB,UAAQ,QAAzC,UACE,qBAAKA,UAAU,qBAEdsC,EACC,cAAC,EAAD,IAEA,sBAAKtC,UAAU,aAAf,UACE,yBAAQA,UAAU,kBAAlB,UACE,qBACEA,UAAU,0CACV,UAAQ,eAFV,yBAIYwC,EAAapC,MAIzB,wBACEG,KAAK,SACLP,UAAU,SACV,UAAQ,cACRQ,QAAS0B,OAIb,sBAAKlC,UAAU,kBAAf,UACE,mBAAGA,UAAU,QAAQ,UAAQ,cAA7B,SACGwC,EAAalC,QAGhB,oBAAGN,UAAU,QAAQ,UAAQ,aAA7B,UAEE,wBAAQA,UAAWG,IAAG,CACpB,mBAAoBqC,EAAanC,UACjC,mBAAoBmC,EAAanC,YAFnC,SAKGmC,EAAanC,UACV,OACA,YAGL,OAED,mBAAG4C,KAAK,2BAAR,gBACGb,QADH,IACGA,OADH,EACGA,EAAMc,oBCjEVC,EAAgB,WAC3B,MAA0BhB,mBAAiB,IAA3C,mBAAOtC,EAAP,KAAcuD,EAAd,KACA,EAA4CjB,mBAAS,OAArD,mBAAOkB,EAAP,KAAuB3C,EAAvB,KACA,EAA0ByB,mBAAS,IAAnC,mBAAOvB,EAAP,KAAcD,EAAd,KACA,EAAkCwB,oBAAS,GAA3C,mBAAOG,EAAP,KAAkBC,EAAlB,KACA,EAAkCJ,oBAAS,GAA3C,mBAAOmB,EAAP,KAAkBC,EAAlB,KACA,EAAsCpB,mBAAS,GAA/C,mBAAOrC,EAAP,KAAoB0D,EAApB,KAEAd,qBAAU,WACRH,GAAa,GFGajB,EAAY,UEAnCO,MAAK,SAAA4B,GACJ,IAAMC,EAAaD,EAChBhB,QAAO,SAAAvC,GAAI,OAAIA,EAAKI,MAClBqD,cACAC,SAAShD,EAAMiD,OAAOF,kBACxBlB,QAAO,SAAAvC,GACN,OAAQmD,GACN,IAAK,SACH,OAAQnD,EAAKG,UACf,IAAK,YACH,OAAOH,EAAKG,UACd,QACE,OAAO,MAIf+C,EAASM,MAEVV,SAAQ,kBAAMT,GAAa,QAC7B,CAAC3B,EAAOyC,IAYX,OACE,qCACE,qBAAKrD,UAAU,UAAf,SACE,qBAAKA,UAAU,YAAf,SACE,sBAAKA,UAAU,MAAf,UACE,oBAAIA,UAAU,QAAd,oBAEA,qBAAKA,UAAU,QAAf,SACE,cAAC,EAAD,CACEU,kBAAmBA,EACnBC,SAAUA,EACVC,MAAOA,MAIX,qBAAKZ,UAAU,QAAf,SACGsC,EACC,cAAC,EAAD,IAEA,cAAC,EAAD,CACEzC,MAAOA,EACPC,YAAaA,EACbC,qBAhCa,SAAC+D,GAC5BP,GAAa,GACbC,EAAeM,eAsCZR,GACC,cAAC,EAAD,CACEzD,MAAOA,EACPC,YAAaA,EACboC,qBAvCqB,WAC3BqB,GAAa,GACbC,EAAe,UCjDnBO,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.8cc95dad.chunk.js","sourcesContent":["import React from 'react';\nimport cn from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[],\n  todoModalId: number;\n  handleShowModalClick: (userId: number) => void;\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  todoModalId,\n  handleShowModalClick,\n}) => {\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {todos.map((todo: Todo) => (\n          <tr\n            data-cy=\"todo\"\n            key={todo.id}\n            className={cn({\n              'has-background-info-light': todoModalId === todo.id,\n            })}\n          >\n            <td className=\"is-vcentered\">{todo.id}</td>\n            {todo.completed ? (\n              <td className=\"is-vcentered\">\n                <span className=\"icon\" data-cy=\"iconCompleted\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              </td>\n            ) : (\n              <td className=\"is-vcentered\" />\n            )}\n            <td className=\"is-vcentered is-expanded\">\n              <p className={cn({\n                'has-text-success': todo.completed,\n                'has-text-danger': !todo.completed,\n              })}\n              >\n                {todo.title}\n              </p>\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                onClick={() => handleShowModalClick(todo.id)}\n              >\n                <span className=\"icon\">\n                  <i className={cn('far', {\n                    'fa-eye': todo.id !== todoModalId,\n                    'fa-eye-slash': todo.id === todoModalId,\n                  })}\n                  />\n                </span>\n              </button>\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import React from 'react';\n\ntype Props = {\n  setSelectedFilter: (val: string) => void;\n  setQuery: (val: string) => void;\n  query: string;\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  setSelectedFilter,\n  setQuery,\n  query,\n}) => (\n  <form className=\"field has-addons\">\n    <p className=\"control\">\n      <span className=\"select\">\n        <select\n          data-cy=\"statusSelect\"\n          onChange={(event) => setSelectedFilter(event.target.value)}\n        >\n          <option value=\"all\">All</option>\n          <option value=\"active\">Active</option>\n          <option value=\"completed\">Completed</option>\n        </select>\n      </span>\n    </p>\n\n    <p className=\"control is-expanded has-icons-left has-icons-right\">\n      <input\n        data-cy=\"searchInput\"\n        type=\"text\"\n        className=\"input\"\n        placeholder=\"Search...\"\n        value={query}\n        onChange={(event) => setQuery(event.target.value)}\n      />\n      <span className=\"icon is-left\">\n        <i className=\"fas fa-magnifying-glass\" />\n      </span>\n\n      {query.length !== 0 && (\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n          <button\n            data-cy=\"clearSearchButton\"\n            type=\"button\"\n            className=\"delete\"\n            onClick={() => setQuery('')}\n          />\n        </span>\n      )}\n    </p>\n  </form>\n);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useEffect, useState } from 'react';\nimport cn from 'classnames';\nimport { Loader } from '../Loader';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { getUser } from '../../api';\n\ntype Props = {\n  todos: Todo[],\n  todoModalId: number;\n  handleHideModalClick: () => void;\n};\nexport const TodoModal: React.FC<Props> = ({\n  todos,\n  todoModalId,\n  handleHideModalClick,\n}) => {\n  const [user, setUser] = useState<User | null>(null);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const selectedTodo = todos.filter(todo => todo.id === todoModalId)[0];\n\n  useEffect(() => {\n    setIsLoading(true);\n    getUser(selectedTodo.userId)\n      .then(u => setUser(u))\n      .catch((error) => {\n        throw new Error(error);\n      })\n      .finally(() => setIsLoading(false));\n  }, [selectedTodo]);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {isLoading ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${selectedTodo.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={handleHideModalClick}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {selectedTodo.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {/* <strong className=\"has-text-success\">Done</strong> */}\n              <strong className={cn({\n                'has-text-danger': !selectedTodo.completed,\n                'has-text-success': selectedTodo.completed,\n              })}\n              >\n                {selectedTodo.completed\n                  ? 'Done'\n                  : 'Planned'}\n              </strong>\n\n              {' by '}\n\n              <a href=\"mailto:Sincere@april.biz\">\n                {user?.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { getTodos } from './api';\nimport { Todo } from './types/Todo';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [selectedFilter, setSelectedFilter] = useState('All');\n  const [query, setQuery] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [showModal, setShowModal] = useState(false);\n  const [todoModalId, setTodoModalId] = useState(0);\n\n  useEffect(() => {\n    setIsLoading(true);\n\n    getTodos()\n      .then(todosList => {\n        const todoFilter = todosList\n          .filter(todo => todo.title\n            .toLowerCase()\n            .includes(query.trim().toLowerCase()))\n          .filter(todo => {\n            switch (selectedFilter) {\n              case 'active':\n                return !todo.completed;\n              case 'completed':\n                return todo.completed;\n              default:\n                return true;\n            }\n          });\n\n        setTodos(todoFilter);\n      })\n      .finally(() => setIsLoading(false));\n  }, [query, selectedFilter]);\n\n  const handleShowModalClick = (todoId: number) => {\n    setShowModal(true);\n    setTodoModalId(todoId);\n  };\n\n  const handleHideModalClick = () => {\n    setShowModal(false);\n    setTodoModalId(0);\n  };\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                setSelectedFilter={setSelectedFilter}\n                setQuery={setQuery}\n                query={query}\n              />\n            </div>\n\n            <div className=\"block\">\n              {isLoading ? (\n                <Loader />\n              ) : (\n                <TodoList\n                  todos={todos}\n                  todoModalId={todoModalId}\n                  handleShowModalClick={handleShowModalClick}\n                />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {showModal && (\n        <TodoModal\n          todos={todos}\n          todoModalId={todoModalId}\n          handleHideModalClick={handleHideModalClick}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}