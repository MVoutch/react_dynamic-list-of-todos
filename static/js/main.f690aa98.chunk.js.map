{"version":3,"sources":["types/TodosFilter.ts","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodosFilter","TodoList","todos","selectedTodo","setSelectedTodo","className","map","todo","cn","id","completed","title","type","onClick","TodoFilter","setSelectedFilter","setQuery","query","onChange","event","newFilter","target","value","Object","values","val","placeholder","length","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoModal","useState","user","setUser","isLoading","setIsLoading","filter","userId","useEffect","getUser","u","catch","error","Error","finally","href","name","App","setTodos","all","selectedFilter","todosList","e","filteredTodos","useMemo","titleMatch","toLowerCase","includes","trim","active","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f690aa98.chunk.js","sourcesContent":["export enum TodosFilter {\n  all = 'all',\n  active = 'active',\n  completed = 'completed',\n}\n","import React from 'react';\nimport cn from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[],\n  selectedTodo: (number | null);\n  setSelectedTodo: (id: number) => void;\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  selectedTodo,\n  setSelectedTodo,\n}) => {\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {todos.map((todo: Todo) => (\n          <tr\n            data-cy=\"todo\"\n            key={todo.id}\n            className={cn({\n              'has-background-info-light': selectedTodo === todo.id,\n            })}\n          >\n            <td className=\"is-vcentered\">{todo.id}</td>\n            {todo.completed ? (\n              <td className=\"is-vcentered\">\n                <span className=\"icon\" data-cy=\"iconCompleted\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              </td>\n            ) : (\n              <td className=\"is-vcentered\" />\n            )}\n            <td className=\"is-vcentered is-expanded\">\n              <p className={cn({\n                'has-text-success': todo.completed,\n                'has-text-danger': !todo.completed,\n              })}\n              >\n                {todo.title}\n              </p>\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                onClick={() => setSelectedTodo(todo.id)}\n              >\n                <span className=\"icon\">\n                  <i className={cn('far', {\n                    'fa-eye': todo.id !== selectedTodo,\n                    'fa-eye-slash': todo.id === selectedTodo,\n                  })}\n                  />\n                </span>\n              </button>\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import React from 'react';\nimport { TodosFilter } from '../../types/TodosFilter';\n\ntype Props = {\n  setSelectedFilter: (val: TodosFilter) => void;\n  setQuery: (val: string) => void;\n  query: string;\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  setSelectedFilter,\n  setQuery,\n  query,\n}) => {\n  const handleFilterChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    const newFilter\n      = TodosFilter[event.target.value as keyof typeof TodosFilter];\n\n    setSelectedFilter(newFilter);\n  };\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            onChange={handleFilterChange}\n          >\n            {Object.values(TodosFilter).map(val => (\n              <option value={val} key={val}>{val}</option>\n            ))}\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={(event) => setQuery(event.target.value)}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {query.length !== 0 && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={() => setQuery('')}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useEffect, useState } from 'react';\nimport cn from 'classnames';\nimport { Loader } from '../Loader';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { getUser } from '../../api';\n\ntype Props = {\n  todos: Todo[],\n  selectedTodo: (number | null);\n  setSelectedTodo: (clean: null) => void;\n};\nexport const TodoModal: React.FC<Props> = ({\n  todos,\n  selectedTodo,\n  setSelectedTodo,\n}) => {\n  const [user, setUser] = useState<User | null>(null);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const {\n    id, title, completed, userId,\n  } = todos\n    .filter(todo => todo.id === selectedTodo)[0];\n\n  useEffect(() => {\n    setIsLoading(true);\n    getUser(userId)\n      .then(u => setUser(u))\n      .catch((error) => {\n        throw new Error(error);\n      })\n      .finally(() => setIsLoading(false));\n  }, [selectedTodo]);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {isLoading ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => setSelectedTodo(null)}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {/* <strong className=\"has-text-success\">Done</strong> */}\n              <strong className={cn({\n                'has-text-danger': !completed,\n                'has-text-success': completed,\n              })}\n              >\n                {completed\n                  ? 'Done'\n                  : 'Planned'}\n              </strong>\n\n              {' by '}\n\n              <a href=\"mailto:Sincere@april.biz\">\n                {user?.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useMemo, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { getTodos } from './api';\nimport { Todo } from './types/Todo';\nimport { TodosFilter } from './types/TodosFilter';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [selectedFilter, setSelectedFilter] = useState<TodosFilter>(TodosFilter.all);\n  const [query, setQuery] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [selectedTodo, setSelectedTodo] = useState<number | null>(null);\n\n  useEffect(() => {\n    setIsLoading(true);\n\n    getTodos()\n      .then(todosList => {\n        setTodos(todosList);\n      })\n      .catch((e) => {\n        throw new Error(e);\n      })\n      .finally(() => setIsLoading(false));\n  }, []);\n\n  const filteredTodos = useMemo(() => {\n    return todos.filter((todo) => {\n      const titleMatch = todo.title\n        .toLowerCase()\n        .includes(query.trim().toLowerCase());\n\n      switch (selectedFilter) {\n        case TodosFilter.active:\n          return titleMatch && !todo.completed;\n        case TodosFilter.completed:\n          return titleMatch && todo.completed;\n        default:\n          return titleMatch;\n      }\n    });\n  }, [todos, query, selectedFilter]);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                setSelectedFilter={setSelectedFilter}\n                setQuery={setQuery}\n                query={query}\n              />\n            </div>\n\n            <div className=\"block\">\n              {isLoading ? (\n                <Loader />\n              ) : (\n                <TodoList\n                  todos={filteredTodos || todos}\n                  selectedTodo={selectedTodo}\n                  setSelectedTodo={setSelectedTodo}\n                />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo && (\n        <TodoModal\n          todos={filteredTodos || todos}\n          selectedTodo={selectedTodo}\n          setSelectedTodo={setSelectedTodo}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}